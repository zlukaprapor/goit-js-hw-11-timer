{"version":3,"sources":["code.js/timer.js","index.js"],"names":["CountdownTimer","selector","targetDate","timeId","currentTime","Date","now","difference","timeForCount","receiveTime","clockFace","clearInterval","document","querySelector","textContent","createTime","setInterval","value","String","padStart","days","hours","mins","secs","time","pad","Math","floor","forTimer","startCounting"],"mappings":";;;AA0DA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1DMA,IAAAA,EAAAA,WACuC,SAAA,IAAJ,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAzBC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAmB,EAAA,KAAA,GACpCC,KAAAA,OAAS,KACTF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAsDtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAnDE,MAAA,WACQE,IAAAA,EAAcC,KAAKC,MACnBC,EAAa,KAAKL,WAAaE,EAC/BI,EAAe,KAAKC,YAAYF,GAIlCA,GAFCG,KAAAA,UAAUF,GAEXD,EAAa,EAGf,OAFAI,cAAc,KAAKR,aACnBS,SAASC,cAAc,YAAYC,YAAc,2BA0CvD,CAAA,IAAA,gBArCE,MAAA,WAAgB,IAAA,EAAA,KACTC,KAAAA,aAEAZ,KAAAA,OAASa,YAAY,WACxB,EAAKD,cACJ,OAgCP,CAAA,IAAA,MA7BE,MAAA,SAAIE,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OA4BrC,CAAA,IAAA,YAzBE,MAAA,SAAuC,GAA3BC,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAE7BX,SAASC,cAAc,uBAAuBC,YAAiBM,GAAAA,OAAAA,GAC/DR,SAASC,cAAc,wBAAwBC,YAAiBO,GAAAA,OAAAA,GAChET,SAASC,cAAc,uBAAuBC,YAAiBQ,GAAAA,OAAAA,GAC/DV,SAASC,cAAc,uBAAuBC,YAAiBS,GAAAA,OAAAA,KAoBnE,CAAA,IAAA,cAjBE,MAAA,SAAYC,GAQH,MAAA,CAAEJ,KAPI,KAAKK,IAAIC,KAAKC,MAAMH,EAAQ,QAO1BH,MAND,KAAKI,IACjBC,KAAKC,MAAOH,EAAQ,MAAyB,OAKzBF,KAHT,KAAKG,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAGlCD,KAFf,KAAKE,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,WAW5D,EA1DMxB,GAqDA4B,EAAW,IAAI5B,EAAe,CAClCC,SAAU,WACVC,WAAY,IAAIG,KAAK,iBAGvBuB,EAASC;;ACzDT,aADA,QAAA,oBACA,QAAA","file":"src.5c5fad5c.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate } = {}) {\n    this.timeId = null;\n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n\n  createTime() {\n    const currentTime = Date.now();\n    const difference = this.targetDate - currentTime;\n    const timeForCount = this.receiveTime(difference);\n    // console.log(`${days}:${hours}:${mins}:${secs}`);\n    this.clockFace(timeForCount);\n\n    if (difference < 0) {\n      clearInterval(this.timeId);\n      document.querySelector(\"#timer-1\").textContent = \"С Новым 2022 Годом!!!\";\n      return;\n    }\n  }\n\n  startCounting() {\n    this.createTime();\n\n    this.timeId = setInterval(() => {\n      this.createTime();\n    }, 1000);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n\n  clockFace({ days, hours, mins, secs }) {\n    // refs.frontSide.textContent = `${days}:${hours}:${mins}:${secs}`;\n    document.querySelector('[data-value=\"days\"]').textContent = `${days}`;\n    document.querySelector('[data-value=\"hours\"]').textContent = `${hours}`;\n    document.querySelector('[data-value=\"mins\"]').textContent = `${mins}`;\n    document.querySelector('[data-value=\"secs\"]').textContent = `${secs}`;\n  }\n\n  receiveTime(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n}\n\nconst forTimer = new CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Jun 1, 2022\"),\n});\n\nforTimer.startCounting();\n","import './sass/main.scss';\nimport './code.js/timer';\n"]}