{"version":3,"sources":["code.js/timer.js","index.js"],"names":["CountdownTimer","selector","targetDate","timeId","currentTime","Date","now","difference","timeForCount","receiveTime","clockFace","clearInterval","document","querySelector","textContent","createTime","setInterval","value","String","padStart","days","hours","mins","secs","time","pad","Math","floor","forTimer","startCounting"],"mappings":";;;AA4DA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3DMA,IAAAA,EAAAA,WAEuC,SAAA,IAAJ,IAAA,EAAA,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAxBC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAkB,EAAA,KAAA,GAChCC,KAAAA,OAAS,KACTF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAsD1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAnDI,MAAA,WACUE,IAAAA,EAAcC,KAAKC,MACnBC,EAAa,KAAKL,WAAaE,EAC/BI,EAAe,KAAKC,YAAYF,GAInCA,GAFEG,KAAAA,UAAUF,GAEZD,EAAa,EAGZ,OAFAI,cAAc,KAAKR,aACnBS,SAASC,cAAc,YAAYC,YAAc,0CA0C7D,CAAA,IAAA,gBArCI,MAAA,WAAgB,IAAA,EAAA,KACPC,KAAAA,aAEAZ,KAAAA,OAASa,YAAY,WAC1B,EAAKD,cAEH,OA+BV,CAAA,IAAA,MA5BI,MAAA,SAAIE,GACOC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OA2BzC,CAAA,IAAA,YAxBI,MAAA,SAAqC,GAA1BC,IAAAA,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAE1BX,SAASC,cAAc,uBAAuBC,YAAiBM,GAAAA,OAAAA,GAC/DR,SAASC,cAAc,wBAAwBC,YAAiBO,GAAAA,OAAAA,GAChET,SAASC,cAAc,uBAAuBC,YAAiBQ,GAAAA,OAAAA,GAC/DV,SAASC,cAAc,uBAAuBC,YAAiBS,GAAAA,OAAAA,KAmBvE,CAAA,IAAA,cAhBI,MAAA,SAAYC,GAMD,MAAA,CAACJ,KALK,KAAKK,IAAIC,KAAKC,MAAMH,EAAQ,QAK3BH,MAJA,KAAKI,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAI/CF,KAHR,KAAKG,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAGnCD,KAFd,KAAKE,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,WAYhE,EA3DMxB,GAsDA4B,EAAW,IAAI5B,EAAe,CAChCC,SAAU,WACVC,WAAY,IAAIG,KAAK,iBAGzBuB,EAASC;;AC3DT,aADA,QAAA,oBACA,QAAA","file":"src.536d23ef.js","sourceRoot":"../src","sourcesContent":["\nclass CountdownTimer {\n    \n    constructor({selector, targetDate} = {}) {\n        this.timeId = null;\n        this.selector = selector;\n        this.targetDate = targetDate;\n    }\n\n    createTime() {\n        const currentTime = Date.now();\n        const difference = this.targetDate - currentTime;\n        const timeForCount = this.receiveTime(difference);\n        // console.log(`${days}:${hours}:${mins}:${secs}`);\n        this.clockFace(timeForCount);\n\n        if(difference < 0) {\n            clearInterval(this.timeId);\n            document.querySelector('#timer-1').textContent = \"Поздравляем с началом учебного года!\"\n            return;\n        };\n    };\n\n    startCounting() {\n        this.createTime();\n\n        this.timeId = setInterval(() => {\n        this.createTime()\n      \n       }, 1000) \n    };\n\n    pad(value) {\n        return String(value).padStart(2, '0');\n    }\n\n    clockFace({days, hours, mins, secs}) {\n        // refs.frontSide.textContent = `${days}:${hours}:${mins}:${secs}`;\n        document.querySelector('[data-value=\"days\"]').textContent = `${days}`;\n        document.querySelector('[data-value=\"hours\"]').textContent = `${hours}`;\n        document.querySelector('[data-value=\"mins\"]').textContent = `${mins}`;\n        document.querySelector('[data-value=\"secs\"]').textContent = `${secs}`;\n    }\n\n    receiveTime(time) {   \n        const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n        const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n        const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n        const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));    \n\n        return {days, hours, mins, secs};\n        }\n\n};\n\nconst forTimer = new CountdownTimer({\n    selector: '#timer-1',\n    targetDate: new Date('Sep 1, 2021'), \n});\n\nforTimer.startCounting();\n","import './sass/main.scss';\nimport './code.js/timer';\n"]}